/* Card listing and parameter mappings - libconfig format

 This file describes a full sub-rack (AC, BC x 3, RC x 4, CC, PSC)

 Set BIASING_AC to substitute a BAC for BC2.

*/

    system = {
        name = "mce";

        error_bits = 0x00000000;
        warning_bits = 0x00000000;

        components = (

<?php /* Physical cards */
   function dump_card_block($card, $text, $test=False, $comma=True) {
      global $CARD_ADDRESS, $CARD_ERRBITS, $card_list;
      if ($test && !in_array($card, $card_list))
        return;
      $id = $CARD_ADDRESS[$card];
      $ebits = $CARD_ERRBITS[$card];
      $id = sprintf("0x%02x", $id);
      $ebits = sprintf("0x%08x", $ebits);
?>
            {
                name = "<?php echo $card?>";
                nature = "physical";
                card_type = "<?php echo $text?>";
                id = ( <?php echo $id?> );
                error_bits = <?php echo $ebits?>;
            }
<?php    if ($comma)
          echo ",\n";
   }

    dump_card_block("psc", "power supply card", True);
    dump_card_block("cc",  "clock card", True);
    dump_card_block("rc1", "readout card", True);
    dump_card_block("rc2", "readout card", True);
    dump_card_block("rc3", "readout card", True);
    dump_card_block("rc4", "readout card", True);
    dump_card_block("bc1", "bias card", True);
    dump_card_block("bc2", "bias-fast card", True);
    dump_card_block("bac", "biasing-address card", True);
    dump_card_block("bc3", "bias card", True);
    dump_card_block("ac",  "address card", True);
 ?>

<?php if (in_array("rcs", $virt_list)) { ?>
            {
                name = "rcs";
                nature = "physical";
                card_type = "readout-all go alias";
                id = ( 0x0B );
                status = 0;
            },
<?php } ?>
<?php if (in_array("sys", $virt_list)) { ?>
            {
                name = "sys";
                nature = "physical";
                card_type = "system alias";
                id = ( <?php echo join(", ", $sys_id_list)?> );
            },
<?php } ?>
<?php if (in_array("rca", $virt_list)) { ?>
            {
                name = "rca";
                nature = "physical";
                card_type = "readout-all alias";
                id = ( <?php echo join(", ", $rca_id_list)?> );
                status = 0;
            },
<?php } ?>
<?php /* Virtual cards */
    function dump_vcard_block($name, $test=True) {
      global $VIRTUAL_ADDRESS, $virt_list;
      if ($test && !in_array($name, $virt_list))
        return;
      $id = sprintf("0x%02x", $VIRTUAL_ADDRESS[$name]);
      $mapping = $name . "_mapping";
?>
            {
                name = "<?php echo $name ?>";
                nature = "virtual";
                id = ( <?php echo $id ?> );
                mapping = "<?php echo $mapping ?>";
            },
<?php
          echo "\n";
    }

    dump_vcard_block("sq2");
    dump_vcard_block("sq1");
    dump_vcard_block("sa");
    dump_vcard_block("tes");
    dump_vcard_block("heater");
?>
            /* Terminator */
            {
                name = "dummy";
                nature = "virtual";
                id = ( <?php printf("0x%02x", $VIRTUAL_ADDRESS["dummy"]) ?> );
                mapping = "no_mapping";
            }
        ); //components list

    }; // system
