default: all

BASE := ../
include $(BASE)Makefile.children

MAKE_CONFIG2 = @DO_CONFIG2@

ifeq ($(MAKE_CONFIG2),yes)
SOURCE = @MCE_CIN_LIST@
MULTICARD = @MULTICARD@
MCE_LIST = @MCE_CFG_LIST@

ifeq ($(MULTICARD),1)
	INSTALL_MCE=install-multimce
else
	INSTALL_MCE=install-mce
endif
endif

MAS_ETCDIR=@MAS_ETCDIR@
TARGET = $(MCE_LIST) mas.cfg
FIRST_MCE_CIN = @FIRST_MCE_CIN@

all: Makefile $(TARGET)

# General rule...
%.cfg : %.cin components/
	php $< > $@ || ( rm -f $@ && exit 1 )

# we only die if the first .cin doesn't exist, because the user may only have
# one fibre card.
$(SOURCE) :
	@if test $@ = "$(FIRST_MCE_CIN)"; then \
		base=`basename $@ .cin`; \
		echo; \
		echo "  ERROR: $@ does not exist... can not produce $$base.cfg"; \
		echo "  Create $@ from your preferred template."; \
	  /bin/false; \
	else \
		base=`basename $@ .cin`; \
		echo; \
		echo "  WARNING: $@ does not exist... skipping production of $$base.cfg"; \
	fi

$(MAS_ETCDIR):
	install --group=$(MAS_GROUP) --mode=775 -d $(MAS_ETCDIR)

install: install-mas $(INSTALL_MCE)

install-mas: ${MAS_ETCDIR} mas.cfg
	@if [ -f ${MAS_ETCDIR}/mas.cfg ]; then \
		if ! diff -I Host -I Origin -I Author -I Date \
				-bq mas.cfg ${MAS_ETCDIR}/mas.cfg > /dev/null; then \
			echo; \
			echo "  WARNING: ${MAS_ETCDIR}/mas.cfg already exists, not overwriting.";\
			echo "  To install the new mas.cfg; delete ${MAS_ETCDIR}/mas.cfg first.";\
		else \
			echo "skipping install of ${MAS_ETCDIR}/mas.cfg (unchanged)"; \
		fi; \
	else \
		echo "installing ${MAS_ETCDIR}/mas.cfg"; \
		install --group=$(MAS_GROUP) --mode=664 mas.cfg ${MAS_ETCDIR}/; \
	fi

install-mce: ${MAS_ETCDIR} mce.cfg
	@if [ -f ${MAS_ETCDIR}/mce.cfg ]; then \
		if ! diff -I Host -I Origin -I Author -I Date \
				-bq mce.cfg ${MAS_ETCDIR}/mce.cfg > /dev/null; then \
			echo; \
			echo "  WARNING: ${MAS_ETCDIR}/mce.cfg already exists, not overwriting.";\
			echo "  To install the new mce.cfg; delete ${MAS_ETCDIR}/mce.cfg first.";\
		else \
			echo "skipping install of ${MAS_ETCDIR}/mce.cfg (unchanged)"; \
		fi; \
	else \
		echo "installing ${MAS_ETCDIR}/mce.cfg"; \
		install --group=$(MAS_GROUP) --mode=664 mce.cfg ${MAS_ETCDIR}/; \
	fi

# First, if ${MAS_ETCDIR}/mce.cfg is a regular file but ${MAS_ETCDIR}/mce0.cfg
#   doesn't exist, we rename mce.cfg to mce0.cfg.
# Second, if ${MAS_ETCDIR}/mce.cfg exists and is not a regular file, we
#   complain, otherwise, if it doesn't exist we create the symlink
# Third, we go through our list of mce#.cfg; and install them if they exist,
#   taking care to not overwrite existing files.
install-multimce: ${MAS_ETCDIR} mce0.cfg
	@if [ -f ${MAS_ETCDIR}/mce.cfg -a ! -e ${MAS_ETCDIR}/mce0.cfg ]; then \
		echo "moving ${MAS_ETCDIR}/mce.cfg to ${MAS_ETCDIR}/mce0.cfg"; \
		mv ${MAS_ETCDIR}/mce.cfg ${MAS_ETCDIR}/mce0.cfg; \
	fi
	@if [ -e ${MAS_ETCDIR}/mce.cfg -a \( ! -h ${MAS_ETCDIR}/mce.cfg \
				-o "`readlink ${MAS_ETCDIR}/mce.cfg`" != mce0.cfg \) ]; then \
		echo; \
		echo "  WARNING: ${MAS_ETCDIR}/mce.cfg should be a symlink pointing to"; \
		echo "  ${MAS_ETCDIR}/mce0.cfg; but it appears to be something else."; \
		echo "  Check your configuration."; \
	elif [ ! -h ${MAS_ETCDIR}/mce.cfg ]; then \
		echo "creating symlink ${MAS_ETCDIR}/mce.cfg -> mce0.cfg"; \
		ln -s mce0.cfg ${MAS_ETCDIR}/mce.cfg; \
	fi
	@for x in $(MCE_LIST); do \
		if [ -f $$x ]; then \
			if [ -f ${MAS_ETCDIR}/$$x ]; then \
				if ! diff -I Host -I Origin -I Author -I Date \
						-bq $$x ${MAS_ETCDIR}/$$x > /dev/null; then \
					echo; \
					echo "  WARNING: ${MAS_ETCDIR}/$$x already exists, not overwriting.";\
					echo "  To install the new $$x; delete ${MAS_ETCDIR}/$$x first."; \
				else \
					echo "skipping install of ${MAS_ETCDIR}/$$x (unchanged)"; \
				fi; \
			else \
				echo "installing ${MAS_ETCDIR}/$$x"; \
				install --group=$(MAS_GROUP) --mode=664 $$x ${MAS_ETCDIR}/; \
			fi; \
		fi; \
	done

.PHONY: install install-mas install-mce clean all default

mas.cin: mas.cin.in
	( cd .. && make config2/mas.cin )

clean:
	rm -f $(TARGET)

.PRECIOUS: Makefile
Makefile: ../config.status Makefile.in
	cd .. && $(MAKE) config2/Makefile
