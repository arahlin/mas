# Program names from configure script
CC= @CC@

# Compilation options from configure script
MAKE_DRIVER=@DO_MAS_DRIVER@
MAKE_SWIG=@DO_MAS_SWIG@

# Set up the sets of folders to recurse into for each target
all_dirs = interfaces applications scripts python config2
clean_dirs = interfaces applications scripts swig python config2
install_dirs = include interfaces applications scripts swig python config2

# Set up dependencies for each target
all_deps = Makefile defaults/config.h makefiles/Makefile.install \
					 makefiles/Makefile.paths scripts/mas scripts/mas_mknodes \
					 scripts/91-mas.rules \
					 applications/mas_var/Makefile config2/Makefile config2/mas.cin
clean_deps = clean_driver
install_deps = all

ifeq ($(MAKE_SWIG),yes)
all_dirs += swig
install_dirs += swig
endif

ifeq ($(MAKE_DRIVER),yes)
all_deps += make_driver
install_deps += install_driver
endif

# Target definitions.  This should be a loop or something...

default: all

all: $(all_deps)
	for d in $(all_dirs); do ( cd $$d && ${MAKE} ) || exit 1; done

clean: $(clean_deps)
	for d in $(clean_dirs); do ( cd $$d && ${MAKE} clean ) || exit 1; done

install: $(install_deps)
	for d in $(install_dirs); do ( cd $$d && ${MAKE} install ) || exit 1; done

.PHONY: default all clean install

# configuration rules

.PRECIOUS: Makefile
Makefile: config.status Makefile.in
	$(SHELL) ./config.status $@

applications/mas_var/Makefile: config.status applications/mas_var/Makefile.in
	$(SHELL) ./config.status $@

config2/Makefile: config.status config2/Makefile.in
	$(SHELL) ./config.status $@

config2/mas.cin: config.status config2/mas.cin.in
	$(SHELL) ./config.status $@

driver/Makefile: config.status driver/Makefile.in
	$(SHELL) ./config.status $@

makefiles/Makefile.install: config.status makefiles/Makefile.install.in
	$(SHELL) ./config.status $@

makefiles/Makefile.paths: config.status makefiles/Makefile.paths.in
	$(SHELL) ./config.status $@

scripts/mas: config.status scripts/mas.in
	$(SHELL) ./config.status $@

scripts/mas_make_card_id: config.status scripts/mas_make_card_id.in
	$(SHELL) ./config.status $@

scripts/91-mas.rules: config.status scripts/91-mas.rules.in
	$(SHELL) ./config.status $@

scripts/mas_mknodes: config.status scripts/mas_mknodes.in
	$(SHELL) ./config.status $@

config.status: configure
	$(SHELL) ./config.status --recheck

configure: configure.in
	autoconf -o $@ $<

# this misdirection prevents us from having to run autoheader every time
defaults/config.h: defaults/config-stamp
	@if test ! -f $@; then \
		rm -f $<; \
		$(MAKE) $<; \
		fi

defaults/config-stamp: defaults/config.h.in config.status
	$(SHELL) ./config.status defaults/config.h
	touch $@

defaults/config.h.in: configure.in
	autoheader $<
	rm -f defaults/config-stamp
	touch $@

# Supporting targets; driver needs some hand-holding...

make_driver:
	cd driver && ${MAKE}

clean_driver:
	cd driver && ${MAKE} clean

install_driver:
	cd driver && ${MAKE} install

.PHONY: make_driver clean_driver install_driver
