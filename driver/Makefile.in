# Output module basename
DRIVER_NAME ?= mce_dsp

ifeq ($(KERNELRELEASE),)  # we are in the source folder now!
src := $(shell pwd)/
else
# Kbuild defines src
endif


# Special directories - must be ?= or they get overwritten
FAKEMCE_DIR ?= fake_mce/
RTAI_DIR   ?= /usr/src/rtai

# Get svn repository version number
REPO_VERSION   = $(shell svnversion $(src))
BRANCH_ID = $(shell cat ../branch_id.txt)

# Module configuration options, set to 'yes' or 'no'

FAKEMCE    ?= @DRIVER_FAKEMCE@
REALTIME   ?= no
BIGPHYS    ?= @DRIVER_BIGPHYS@

KERNEL_SOURCE = @KERNEL_DIR@

# Compilation options - don't trash CFLAGS, everything breaks.

DEFS = 
INCLUDES = -I$(src) -I$(src)/../include
LIBS = 
MY_CFLAGS = -Wall

ifeq ($(FAKEMCE),yes)
  DEFS += -DFAKEMCE
  INCLUDES += -I$(src)/$(FAKEMCE_DIR)
endif #FAKEMCE=yes

ifeq ($(REALTIME),yes)
  DEFS += -DREALTIME
  INCLUDES += -I$(RTAI_DIR)/include -I$(RTAI_DIR)
endif #REALTIME=yes

ifeq ($(BIGPHYS),yes)
  DEFS += -DBIGPHYS
endif #BIGPHYS=yes



# Set up source files

SOURCE_OBJ := mce_driver.o mce_ops.o \
	dsp_driver.o dsp_ops.o \
	data.o data_qt.o data_ops.o data_watcher.o \
	proc.o

ifeq ($(FAKEMCE),yes)

  SOURCE_OBJ += $(FAKEMCE_DIR)dsp_fake.o \
	$(FAKEMCE_DIR)mce_fake.o \
	$(FAKEMCE_DIR)dsp_state.o

endif #FAKEMCE=yes


# Do the standard 2.6 kernel build stuff.

include $(src)/Makefile.2.6


# General rules

fault:
	@echo Unknown kernel version $(TARGET_KERNEL) : $(KVER)

clean: kversion_clean
	-rm -rf *.o *~ core version.h \
		.depend .*.cmd *.mod.c .tmp_versions Module.symvers
ifeq ($(FAKEMCE),yes)
	make -C $(FAKEMCE_DIR) clean
endif #FAKEMCE=1


# Version header file generation
version_last:
	@[ "`svnversion`" != "`cat version_last`" ] && svnversion > version_last

version.h: version.h.template version_last
	grep -v '^\/\*-' version.h.template | \
		sed 's:\$$REPO\.:$(BRANCH_ID):g' | \
		sed 's/\$$SVN\./$(REPO_VERSION)/g' > version.h


# Install rule

install: modules
	install -d $(INSTALLDIR)
	install $(DRIVER_FILE) $(INSTALLDIR)
	depmod -v $(KERNELVER) > /dev/null

.PHONY: FORCE
