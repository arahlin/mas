#!/bin/bash
# (C) 2010 D. V. Wibe
#
# mas_make_card_id
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

MCE_CARD_ID=/etc/mce/mce_card_id
MCE_CARD_MAX=99 # that right: no more than 100 cards per computer

if [ "$1" == '--help' ]; then
  echo "Usage: $0 [-a]"
  echo
  echo "Generates /etc/mce/mce_card_id to match the configuration of the"
  echo "currently running system.  If -a is specified, cards present in the"
  echo "system but not currently enumerated, will be automatically enumerated"
  echo "by this script; otherwise, unenumerated cards will be skipped."
  echo
  echo "This is free software; see the GNU General Public Licence version 2 or"
  echo "later for copying conditions. There is NO warranty."
  exit 0;
fi

if [ "$1" == "-a" ]; then
  autoenumerate="/bin/true"
else
  autoenumerate="/bin/false"
fi

# generate a two-way look-up table for logical devices
declare -a phylog
declare -a logphy
for d in /dev/mce_cmd[0-9]*; do
  if [ -c $d ]; then
    log=$(echo $d | sed -e 's/\/dev\/mce_cmd//')
    phy=$(stat -c %T $d)
    phylog[$phy]=$log
    logphy[$log]=$phy
  else
    echo "WARNING: Ingoring non-character device $d."
  fi
done

# bookkeeping
declare -a sawlog

# go through the physical cards, adding an entry for each:
while read pci phy; do
  skip="/bin/false";
  log=${phylog[$phy]}
  if [ "x$log" = "x" ]; then
    # unconfigured physical card
    if $autoenumerate; then
      # find the lowest unused logical card number
      for l in $(seq 0 $MCE_CARD_MAX); do
        if [ "x${logphy[$l]}" = "x" ]; then
          logphy[$l]=$phy
          phylog[$phy]=$l
          log=$l
          break
        fi
      done
      if [ "x$log" = "x" ]; then
        echo "ERROR: Autoenumeration of physical card $phy failed!" >&2
        exit 1
      fi
      echo "Autoenumerating physical card $phy as logical card $log." >&2
    else
      echo "WARNING: Skipping unenumerated physical card $phy." >&2
      skip="/bin/true"
    fi
  fi
  sawlog[$log]=1
  if ! $skip; then
    mapping="$mapping$pci        $log
"
  fi
done <<EOF
$(grep '\(CARD\|bus address\)' /proc/mce_dsp | \
  awk '/CARD/ {c=$2} /bus address/ {print $3 " " c}')
EOF


# check for stragglers
for l in $(seq 0 $MCE_CARD_MAX); do
  if [ "x${sawlog[$l]}" = "x" -a "x${logphy[$l]}" != "x" ]; then
    cat >&2 <<EOF
WARNING: Ignoring non-existant physical card ${logphy[$l]} configured
         as logical card $l.
EOF
  fi
done

#make a temporary file
tmp=`mktemp`

# Write the file
cat > $tmp <<EOF
# $MCE_CARD_ID
#
# This file was automatically generated by $LOGNAME@$HOSTNAME
# at $(date -u '+%FT%T') UTC using $0.
#
# This file is consulted by mas_mknodes.  Run 'mas_mknodes --help' for details.
#
# PCI_SLOT_ID   LOGICAL_CARD_NUM
$mapping
EOF

# move the temporary file over the old list
mv -f $tmp $MCE_CARD_ID || {
echo "ERROR: unable to write to $MCE_CARD_ID" >&2;
rm -f $tmp;
exit 1;
}

echo "$MCE_CARD_ID successfully regenerated." >&2
exit 0
