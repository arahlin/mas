#!/bin/bash
# @configure_input@

MCE_CARD_ID=/etc/mce/mce_card_id

DSP_FILE=/dev/mce_dsp
MCEC_FILE=/dev/mce_cmd
MCED_FILE=/dev/mce_data

DSP_DEV=mce_dsp
MCEC_DEV=mce_cmd
MCED_DEV=mce_data

GRP=@MAS_GROUP@

if [ "$1" = "--help" ]; then
  echo "Usage: $0 <NUM-CARDS> [FIRST-PHY] [FIRST-LOG]"
  echo "   or: $0 pci <PCI-SLOT-ADDRESS> [LOG]"
  echo
  echo "  In the first instance, create device nodes for NUM-CARDS consecutive"
  echo "       fibre cards, starting with physical card number FIRST-PHY.  The"
  echo "       first card will be given logical card number FIRST-LOG, with the"
  echo "       logical card number increasing by one for each subsequent card."
  echo "       If FIRST-LOG or FIRST-PHY are omitted, zero is assumed."
  echo
  echo "  In the second instance, create device nodes for the physical card with"
  echo "       the specified PCI slot address, giving it logical card number LOG."
  echo "       If LOG is omitted, the logical card number is determined by"
  echo "       examining /etc/mce/mce_card_id, or if that file does not exist,"
  echo "       by simply using the physical card number.  NB: if the file does"
  echo "       exist, but PCI slot address is not found, an error results.  The"
  echo "       /etc/mce/mce_card_id may be generated by running mas_make_card_id."
  exit 0
fi

if [ "`whoami`" != "root" ]; then
    echo "Must be run as root or sudo."
    exit 1
fi

if [ "$1" == "" ]; then
    echo "No argument given; creating a single device node."
    ndev=1
else
    ndev=$1
fi

#first phyiscal card number 
dev0=0
[ "$2" == "" ] || dev0="$2"

#first logical card number
log0="none"
[ "$3" == "" ] || log0="$3"

awkp="\$2==\"$DSP_DEV\" {print \$1;}"
DSP_MAJOR=`awk "$awkp" /proc/devices`

awkp="\$2==\"$MCEC_DEV\" {print \$1;}"
MCEC_MAJOR=`awk "$awkp" /proc/devices`

awkp="\$2==\"$MCED_DEV\" {print \$1;}"
MCED_MAJOR=`awk "$awkp" /proc/devices`

function do_card {
  local phy=$1
  local log=$2
  mknod $DSP_FILE$log c $DSP_MAJOR $phy
  chgrp $GRP $DSP_FILE$log
  chmod g+rw  $DSP_FILE$log

  mknod $MCEC_FILE$log c $MCEC_MAJOR $phy
  chgrp $GRP $MCEC_FILE$log
  chmod g+rw  $MCEC_FILE$log

  mknod $MCED_FILE$log c $MCED_MAJOR $phy
  chgrp $GRP $MCED_FILE$log
  chmod g+rw  $MCED_FILE$log
}

if [ "$ndev" == "pci" ]; then
  # make devices based on a PCI slot (used by udev)
  # here dev0 contains the slot address
  phy0=`grep '\(CARD\|bus address\)' /proc/mce_dsp | \
    awk "/CARD/ {c=\\\$2} /$dev0/ { print c }"`
  if [ "x$phy0" = "x" ]; then
    echo "ERROR: PCI slot address not recognised."
    exit 1
  fi
  if [ "x$log0" = "xnone" ]; then
    # no logical address specified, try to find one
    if [ -f $MCE_CARD_ID ]; then
      log0=`awk "BEGIN {ORS=\"\"} /^$dev0/ {print \\\$2}" $MCE_CARD_ID`
      if [ "x$log0" = "x" ]; then
        echo "ERROR: PCI slot address $dev0 not found in mapping table."
        exit 1
      fi
    else
      log0=$phy0
    fi
  fi
  do_card $phy0 $log0
else
  [ "x$log0" = "xnone" ] && log0=0
  for i in $(seq $dev0 $(( $ndev + $dev0 - 1 )) ); do
    do_card $i $(expr $i + $log0)
  done
fi
